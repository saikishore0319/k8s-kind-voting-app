services:
  vote:
    build:
      context: ./vote
    ports:
    - "5000:80"
    networks:
    - front-tier
    - back-tier
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  worker:
    build:
      context: ./worker
    depends_on:
      redis:
        condition: service_healthy
    networks:
    - back-tier
    healthcheck:
      test: ["CMD-SHELL","/app/worker-healthcheck.sh"]
      retries: 3
      interval: 10s
      timeout: 5s

  result:
    build: 
      context: ./result
    ports:
    - "5001:80"
    depends_on:
      db:
        condition: service_healthy
      worker:
        condition: service_healthy
    networks:
    - front-tier
    - back-tier

  redis:
    image: redis:alpine
    volumes:
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: ["CMD-SHELL","/healthchecks/redis.sh"]
      interval: 5s
    networks:
    - back-tier

  db:
      image: postgres:15-alpine
      environment:
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: "postgres"
      volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
      networks:
      - back-tier
      healthcheck:
        test: ["CMD-SHELL","/healthchecks/postgres.sh"]

  seed:
    build:
      context: ./seed-data
    depends_on:
      vote:
        condition: service_healthy
      worker:
        condition: service_healthy
    networks:
    - front-tier
    - back-tier

networks:
  back-tier:
  front-tier:
volumes:
  db-data:

